/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.UUID;
import javax.swing.JOptionPane;

/**
 *
 * @author VivianaPetit 
 */
public class CargarResumen extends javax.swing.JFrame {
    Fuentes tipoFuente;
    String ruta;
    String rutaBaseProyecto;
    
    /**
     * Creates new form CargarResumen
     */
    public CargarResumen() {
        initComponents();
        rutaBaseProyecto = System.getProperty("user.dir");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        tipoFuente = new Fuentes();
        jLabel4.setFont(tipoFuente.fuente(tipoFuente.nombre, 1, 20));
        jLabel8.setFont(tipoFuente.fuente(tipoFuente.nombre, 1, 15));
        jLabel5.setFont(tipoFuente.fuente(tipoFuente.nombre, 1, 18));
    }
    
    /**
     * Permite al usuario cargar un archivo de texto .txt y devuelve la ruta del mismo.
     * @return la ruta del archivo .txt seleccionado por el usuario.
     */
    public String buscarArchivo() {
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de Texto", "txt");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(filter);
        File ruta = new File("e:/carpeta/");
        fileChooser.setCurrentDirectory(ruta);
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String dir = String.valueOf(file).replace("\\", "//");
            return dir;
        }
        return "";
    }
    
    /**
     * Guarda un archivo de texto en una carpeta.
     * @param contenido contenido del archivo de texto a guardar.
     * @param rutaArchivo ruta donde se guardara el archivo de texto.
     */
    public void guardarArchivo(String contenido, String rutaArchivo){
        try {  
            FileWriter fw = new FileWriter(rutaArchivo);
            BufferedWriter bw = new BufferedWriter(fw);

            bw.write(contenido);

            bw.close();
            fw.close();
             
        } catch (Exception e){
           
        }
    }
    
    /**
     * Lee un archivo txt y guarda su contenido en una variable. 
     * @param archivo Archivo txt del cual se obtendra su contenido. 
     * @return Un <code>String</code> con el contenido del archivo.
     */
    public String leerArchivo(String archivo){
        StringBuilder contenido = new StringBuilder();
        try {
            FileReader fr = new FileReader(archivo);
            BufferedReader br = new BufferedReader(fr);
            String linea;

            while ((linea = br.readLine()) != null) {
                contenido.append(linea).append("\n");
            }

            br.close();
            fr.close();
        } catch (Exception e) {
            
        }
        return contenido.toString();
    }
    
    /**
     * Genera un nombre unico para los archivos.
     * Valida que no exista ya un archivo con ese nombre.
     * @return Un <code>String</code> con el nombre para el archivo. 
     */
    public String generarNombre(){ 
        String idNombre = UUID.randomUUID().toString();
        try {
            Path directorioResumenes = Paths.get(rutaBaseProyecto, "src", "Resumenes");
            
            for (Path archivo : Files.newDirectoryStream(directorioResumenes)) {
                String nombre = archivo.getFileName().toString().replaceAll(".txt", "");
                if (nombre.equals(idNombre)){
                    idNombre = UUID.randomUUID().toString();
                }
                // System.out.println(nombre);
            }
        } catch (IOException e) {
           JOptionPane.showMessageDialog(null, e);
        }
        return idNombre;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new Interfaz.PanelRound();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        panelRound3 = new Interfaz.PanelRound();
        panelRound2 = new Interfaz.PanelRound();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        menuBtn = new Interfaz.PanelRound();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound1.setBackground(new java.awt.Color(213, 228, 207));
        panelRound1.setRoundBottomLeft(10);
        panelRound1.setRoundBottomRight(10);
        panelRound1.setRoundTopLeft(10);
        panelRound1.setRoundTopRight(10);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Metro mendeley (5).png"))); // NOI18N
        panelRound1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 140, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Metro mendeley.png"))); // NOI18N
        panelRound1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 80));

        panelRound3.setBackground(new java.awt.Color(255, 255, 255));
        panelRound3.setRoundBottomLeft(10);
        panelRound3.setRoundBottomRight(10);
        panelRound3.setRoundTopLeft(10);
        panelRound3.setRoundTopRight(10);
        panelRound3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.setBackground(new java.awt.Color(2, 64, 83));
        panelRound2.setRoundBottomLeft(10);
        panelRound2.setRoundBottomRight(10);
        panelRound2.setRoundTopLeft(10);
        panelRound2.setRoundTopRight(10);
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });
        panelRound2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Buscar Archivo");
        panelRound2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        panelRound3.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 180, 60));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 3, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(2, 64, 83));
        jLabel6.setText("Sólo archivos tipo .txt");
        panelRound3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 120, 20));

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 300, 120));

        menuBtn.setBackground(new java.awt.Color(2, 64, 83));
        menuBtn.setRoundBottomLeft(10);
        menuBtn.setRoundBottomRight(10);
        menuBtn.setRoundTopLeft(10);
        menuBtn.setRoundTopRight(10);
        menuBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuBtnMousePressed(evt);
            }
        });
        menuBtn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setBackground(new java.awt.Color(213, 228, 207));
        jLabel8.setForeground(new java.awt.Color(213, 228, 207));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Menú");
        menuBtn.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 40, 20));

        panelRound1.add(menuBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 80, 20));

        jLabel5.setForeground(new java.awt.Color(2, 64, 83));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Carga un nuevo resumen al sistema.");
        panelRound1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 250, 20));

        getContentPane().add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        ruta = this.buscarArchivo();
        boolean creado = Inicio.crearResumenes(ruta);
        
        String contenido = leerArchivo(ruta);
        String nombreArchivo = this.generarNombre();
        String rutaRelativa = "\\src\\Resumenes\\" + nombreArchivo + ".txt";
        String rutaNueva = rutaBaseProyecto + rutaRelativa;
        if (!(contenido.equals("")) && creado){
            guardarArchivo(contenido, rutaNueva);
        }
    }//GEN-LAST:event_panelRound2MousePressed

    private void menuBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBtnMousePressed
        Menu menu = new Menu();
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_menuBtnMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CargarResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CargarResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CargarResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CargarResumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CargarResumen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private Interfaz.PanelRound menuBtn;
    private Interfaz.PanelRound panelRound1;
    private Interfaz.PanelRound panelRound2;
    private Interfaz.PanelRound panelRound3;
    // End of variables declaration//GEN-END:variables
}
